{"version":3,"file":"static/js/189.e9fc4dff.chunk.js","mappings":"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","sources":["hooks/useForm.js","pages/SignUp/index.jsx","service/index.js","service/api.js"],"sourcesContent":["import React, { useReducer, useCallback } from \"react\";\nimport set from \"lodash/set\";\nimport get from \"lodash/get\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst getInitialState = (initialValues) => {\n  return {\n    values: {\n      ...initialValues,\n    },\n    errors: {}, // all errors\n    touched: {}, // dirty field names\n    isSubmitted: false, // is form submitted to check validation\n    submitCounter: 0,\n  };\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case \"INPUT_CHANGE\":\n      const inputKey = payload.key;\n      const inputValue = payload.value;\n      const values = cloneDeep(state.values);\n      const touched = cloneDeep(state.touched);\n      return {\n        ...state,\n        values: set(values, inputKey, inputValue),\n        touched: set(touched, inputKey, true),\n      };\n    case \"VALIDATE_FORM\":\n      const errors = payload.errors || {};\n      return {\n        ...state,\n        errors,\n      };\n    case \"SET_VALUES\":\n      return { ...state, values: { ...payload.values } };\n    case \"RESET_FORM\":\n      return { ...payload, errors: {} };\n    case \"SUBMIT_FORM\":\n      return {\n        ...state,\n        isSubmitted: true,\n        submitCounter: ++state.submitCounter,\n      };\n    case \"CLEAR_FORM\":\n      return { ...state, values: { ...payload.values }, errors: {} };\n    default:\n      return state;\n  }\n};\n\nconst defaultConfig = {\n  validate: true, // should validate form?\n  validationOnChange: false, // should form validate on blur input\n  validateSchema: false, // yup validation schema\n};\n\nconst useForm = (initialValues = {}, config = { ...defaultConfig }) => {\n  const initalState = getInitialState(initialValues);\n  const [state, dispatch] = useReducer(reducer, initalState);\n  const { validate, validationOnChange, validateSchema } = config;\n\n  const getValidationErrors = useCallback(() => {\n    return new Promise((resolve, _) => {\n      if (validateSchema) {\n        try {\n          const isValid = validateSchema.validateSync(state.values, {\n            abortEarly: false,\n          });\n          resolve({ isValid, errors: {} });\n        } catch (err) {\n          const errors = {};\n\n          err.inner.forEach((yupErr) => {\n            const currentErr = get(errors, yupErr.path);\n            if (currentErr) {\n              set(errors, yupErr.path, [...currentErr, yupErr.message]);\n            } else {\n              set(errors, yupErr.path, [yupErr.message]);\n            }\n          });\n          resolve({ isValid: false, errors });\n        }\n      } else {\n        resolve({ isValid: true, errors: {} });\n      }\n    });\n  }, [state, validateSchema]);\n\n  const validateForm = useCallback(async () => {\n    const { isValid, errors } = await getValidationErrors();\n    dispatch({ type: \"VALIDATE_FORM\", payload: { errors } });\n    return isValid;\n  }, [getValidationErrors]);\n\n  React.useEffect(() => {\n    async function checkForm() {\n      await validateForm();\n    }\n    if (validationOnChange && state.isSubmitted) {\n      checkForm();\n    }\n  }, [state.values, state.isSubmitted, validationOnChange]);\n\n  const handleChange = useCallback(async (key, value) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      payload: { key, value },\n    });\n  }, []);\n\n  const resetForm = useCallback(() => {\n    dispatch({\n      type: \"RESET_FORM\",\n      payload: {\n        ...initalState,\n      },\n    });\n  }, [initalState]);\n\n  const clearForm = useCallback(() => {\n    const oldValues = { ...state.values };\n    Object.keys(oldValues).forEach(function (key) {\n      oldValues[key] = \"\";\n    });\n    dispatch({\n      type: \"CLEAR_FORM\",\n      payload: {\n        ...oldValues,\n      },\n    });\n  }, [state.values]);\n\n  const setValues = (values) => {\n    dispatch({\n      type: \"SET_VALUES\",\n      payload: {\n        ...values,\n      },\n    });\n  };\n\n  const handleSubmit = useCallback(\n    async (onSubmit) => {\n      if (validate) {\n        dispatch({ type: \"SUBMIT_FORM\", payload: null });\n        if (await validateForm()) {\n          onSubmit(state.values);\n        }\n      } else {\n        onSubmit(state.values);\n      }\n    },\n    [state.values, validate, validateForm],\n  );\n\n  return {\n    handleChange,\n    resetForm,\n    handleSubmit,\n    clearForm,\n    setValues,\n    ...state,\n  };\n};\n\nexport default useForm;\n","import React,{useEffect,useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { getVenueType, postSignupUser } from \"service/api\";\nimport * as yup from \"yup\";\n\nimport { Button, Img, Input, SelectBox, Text } from \"components\";\n\nimport useForm from \"hooks/useForm\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst selectOptionsList = [\n  { label: \"Option1\", value: \"option1\" },\n  { label: \"Option2\", value: \"option2\" },\n  { label: \"Option3\", value: \"option3\" },\n];\nconst divOptionsList = [\n  { label: \"America/New York\", value: 1 },\n  \n];\n\nconst SignUpPage = () => {\n  const navigate = useNavigate();\n  const [signupUser, setSignupUser] = React.useState();\n\n\n  // const [venueTypeData, setVenueTypeData] = useState([]);\n  const [venueTypeList, setVenueTypeList] = useState([]);\n  const [selectedVenueType, setSelectedVenueType] = useState(null);\n\n\n\n  const [venueType, setVenueType] = React.useState();\n  const formValidationSchema = yup.object().shape({\n    firstName: yup.string().required(\"First Name is required\"),\n    lastName: yup.string().required(\"Last Name is required\"),\n    email: yup\n      .string()\n      .required(\"Email is required\")\n      .matches(\n        /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n        \"Email is not in correct format\",\n      ),\n    password: yup.string().required(\"Password is required\"),\n    venue_name: yup.string().required(\"Venue Name is required\"),\n    // phone: yup\n    //   .string()\n    //   .required(\"Contact Number is required\")\n    //   .matches(/^\\d{10}$/, \"Contact Number must be 10 digits\"),\n  });\n  \n  const form = useForm(\n    {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      address:\"\",\n      venue_name: \"\",\n      venue_type:\"\",\n      website: \"\",\n    },\n    {\n      validate: true,\n      validateSchema: formValidationSchema,\n      validationOnChange: true,\n    },\n  );\n\n  function createanaccount(data) {\n    const req = {\n\n      data: {\n        firstName: data?.firstName,\n        lastName: data?.lastName,\n        email: data?.email,\n        password: data?.password,\n        role_id: \"1\",\n        venue_name: data?.venue_name,\n        phone:data?.phone,\n        venue_type: selectedVenueType,\n        website: data?.website,\n\n      },\n\n    };\n\n    postSignupUser(req)\n      .then((res) => {\n        setSignupUser(res?.data);\n\n        toast.success(\"You are Registered Succesfully!\");\n        setTimeout(() => {\n          navigate(\"/loginScreen\")\n        }, 3000);\n        \n      })\n      .catch((err) => {\n        console.error(err);\n        toast.error(\"Something Went Wrong!\");\n      });\n  }\n  async function select() {\n    const req = {};\n  \n    await getVenueType(req)\n      .then((res) => {\n        console.log(res, \"response is\");\n        setVenueType(res.data.data);\n        console.log(venueType, \"id ==>>>\");\n  \n        let options;\n  \n        if (res.data.data.length === 1) {\n          // If there's only one item, create an option directly\n          options = [\n            {\n              label: res.data.data[0].name,\n              value: res.data.data[0].id,\n            },\n          ];\n        } else {\n          // If there are multiple items, map the array to options\n          options = res.data.data.map((item) => ({\n            label: item.name,\n            value: item.id,\n          }));\n        }\n  \n        setVenueTypeList(options);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n  \n\nuseEffect(()=>{\n  select();\n\n},[])\n\n console.log(venueTypeList,\"type of venue \")\n\n\n// Function to handle dropdown value change\nconst handleVenueTypeChange = (selectedOption) => {\n  // Update the state with the selected value\n  setSelectedVenueType(selectedOption);\n};\n\n  return (\n    <>\n      <div className=\"bg-black-900 flex flex-col font-poppins items-center justify-start mx-auto w-full\">\n        <div\n          className=\"bg-cover bg-no-repeat flex flex-col h-[1117px] items-center justify-start p-[53px] md:px-10 sm:px-5 w-full\"\n          style={{ backgroundImage: \"url('images/img_group2.png')\" }}\n        >\n          <div className=\"flex flex-col items-center justify-start mb-2.5 w-[41%] md:w-full\">\n            <div className=\"bg-white-A700 flex flex-col items-start justify-start max-w-[661px] p-12 md:px-10 sm:px-5 rounded-[24px] w-full\">\n              <div className=\"flex flex-col gap-6 items-start justify-start w-auto sm:w-full\">\n                <div className=\"flex flex-col items-center justify-center w-[534px] sm:w-full\">\n                  <Text\n                    className=\"md:text-3xl sm:text-[28px] text-[32px] text-blue_gray-900 w-auto\"\n                    size=\"txtPoppinsMedium32\"\n                  >\n                    Sign Up\n                  </Text>\n                </div>\n                <div className=\"flex sm:flex-col flex-row gap-6 items-start justify-start w-[100%] sm:w-full\">\n                  <div className=\"flex flex-col gap-2.5 items-center justify-start w-[48%] sm:w-full\">\n                    <div className=\"flex flex-col items-start justify-start pb-[3px] pr-[3px] w-full\">\n                      <Text\n                        className=\"text-base text-gray-700\"\n                        size=\"txtPoppinsSemiBold16\"\n                      >\n                        First name\n                      </Text>\n                    </div>\n                    <Input\n                      name=\"input\"\n                      placeholder=\"\"\n                      className=\"p-0 placeholder:bg-white-A700 w-full h-[48px]\"\n                      wrapClassName=\"h-12 rounded-[10px] w-[98%]\"\n                      onChange={(e) => {\n                        form.handleChange(\"firstName\", e);\n                      }}\n                      errors={form?.errors?.firstName}\n                      value={form?.values?.firstName}\n                      shape=\"round\"\n                      color=\"gray_400\"\n                      variant=\"outline\"\n                    ></Input>\n                  </div>\n                  <div className=\"flex flex-col gap-2.5 items-center justify-start w-[48%] sm:w-full\">\n                    <div className=\"flex flex-col items-start justify-start pb-0.5 pr-0.5 w-full\">\n                      <Text\n                        className=\"text-base text-gray-700\"\n                        size=\"txtPoppinsSemiBold16\"\n                      >\n                        Last name\n                      </Text>\n                    </div>\n                    <Input\n                      name=\"input_One\"\n                      placeholder=\"\"\n                      className=\"p-0 placeholder:bg-white-A700 w-full h-[48px]\"\n                      wrapClassName=\"h-12 outline outline-[1px] outline-gray-400 rounded-[10px] w-[98%]\"\n                      onChange={(e) => {\n                        form.handleChange(\"lastName\", e);\n                      }}\n                      errors={form?.errors?.lastName}\n                      value={form?.values?.lastName}\n                      shape=\"round\"\n                      color=\"white_A700\"\n                      variant=\"fill\"\n                    ></Input>\n                  </div>\n                </div>\n                <div className=\"flex sm:flex-col flex-row gap-6 items-start justify-start w-[100%] sm:w-full\">\n                  <div className=\"flex flex-col gap-2.5 items-center justify-start w-[48%] sm:w-full\">\n                    <div className=\"flex flex-col items-start justify-start pb-[3px] pr-[3px] w-full\">\n                      <Text\n                        className=\"text-base text-white-700\"\n                        size=\"txtPoppinsSemiBold16\"\n                      >\n                        Email\n                      </Text>\n                    </div>\n                    <Input\n                      name=\"input_Two\"\n                      placeholder=\"\"\n                      className=\"p-0 placeholder:bg-white-A700 w-full h-[48px]\"\n                      wrapClassName=\"outline outline-[1px] outline-gray-400 rounded-[10px] w-full\"\n                      onChange={(e) => {\n                        form.handleChange(\"email\", e);\n                      }}\n                      errors={form?.errors?.email}\n                      value={form?.values?.email}\n                      shape=\"round\"\n                      color=\"white_A700\"\n                      variant=\"fill\"\n                    ></Input>\n                  </div>\n                  <div className=\"flex flex-col gap-2.5 items-center justify-start w-[48%] sm:w-full\">\n                    <div className=\"flex flex-col font-poppins items-start justify-start pb-0.5 pr-0.5 w-full\">\n                      <Text\n                        className=\"text-base text-gray-700\"\n                        size=\"txtPoppinsSemiBold16\"\n                      >\n                        Password\n                      </Text>\n                    </div>\n                  \n                    <Input\n                      name=\"input_Two\"\n                      type=\"password\"\n                      placeholder=\"\"\n                      className=\"p-0 placeholder:bg-white-A700 w-full h-[48px]\"\n                      wrapClassName=\"outline outline-[1px] outline-gray-400 rounded-[10px] w-full\"\n                      onChange={(e) => {\n                        form.handleChange(\"password\", e);\n                      }}\n                      errors={form?.errors?.password}\n                      value={form?.values?.password}\n                      shape=\"round\"\n                      color=\"white_A700\"\n                      variant=\"fill\"\n                    ></Input>\n                  </div>\n                </div>\n                <div className=\"flex flex-col items-center justify-start pb-2 w-full\">\n                  <div className=\"flex flex-col gap-1 items-start justify-start w-[558px] sm:w-full\">\n                    <div className=\"flex flex-col items-start justify-start pb-0.5 pr-0.5 w-full \">\n                      <Text\n                        className=\"text-base text-gray-700\"\n                        size=\"txtPoppinsSemiBold16\"\n                      >\n                        Venue Name\n                      </Text>\n                    </div>\n                    <Input\n                      name=\"input_Three\"\n                      placeholder=\"\"\n                      className=\"p-0 placeholder:bg-white-A700 w-full h-[48px]\"\n                      wrapClassName=\"outline outline-[1px] outline-gray-400 rounded-[10px] w-full\"\n                      onChange={(e) => {\n                        form.handleChange(\"venue_name\", e);\n                      }}\n                      errors={form?.errors?.[\"venue_name\"]}\n                      value={form?.values?.[\"venue_name\"]}\n                      shape=\"round\"\n                      color=\"white_A700\"\n                      variant=\"fill\"\n                    ></Input>\n                  </div>\n                </div>\n                <div className=\"flex flex-col gap-1 items-start justify-start w-[558px] sm:w-full\">\n                  <div className=\"flex flex-col font-poppins items-start justify-end w-full\">\n                    <Text\n                      className=\"text-base text-gray-700\"\n                      size=\"txtPoppinsSemiBold16\"\n                    >\n                      What type of venue do you have? *\n                    </Text>\n                  </div>\n                  <SelectBox\n                    className=\"bg-white-A700 outline outline-[1px] outline-gray-400 pl-3.5 pr-0.5 py-0.5 rounded-[10px] text-base text-gray-600 text-left w-full\"\n                    placeholderClassName=\"text-gray-600\"\n                    indicator={\n                      <Img\n                        className=\"h-11 mr-[0] w-7\"\n                        src=\"images/img_div.svg\"\n                        alt=\"div\"\n                      />\n                    }\n                    isMulti={false}\n                    name=\"select\"\n                    options={venueTypeList}\n                    isSearchable={true}\n                    placeholder=\"Select...\"\n                    \n                   onChange={handleVenueTypeChange}\n                  \n                  />\n                </div>\n                <div className=\"flex flex-col gap-1 items-start justify-start w-[558px] sm:w-full\">\n                  <div className=\"flex flex-col items-start justify-start pb-0.5 pr-0.5 w-full\">\n                    <Text\n                      className=\"text-base text-gray-700\"\n                      size=\"txtPoppinsSemiBold16\"\n                    >\n                      Address\n                    </Text>\n                  </div>\n                  <div className=\"bg-white-A700 flex flex-col items-center justify-start outline outline-[1px] outline-gray-400 p-0.5 rounded-[10px] w-full\">\n                    <Input\n                    type=\"tel\"\n                      name=\"div\"\n                      \n                      placeholder=\"\"\n                      className=\"p-0 w-full h-[48px]\"\n                      wrapClassName=\"flex  w-full\"\n                     \n                    ></Input>\n                  </div>\n                </div>\n                <div className=\"flex flex-col gap-1 items-start justify-start w-[558px] sm:w-full\">\n                  <div className=\"flex flex-col items-start justify-start pb-[3px] pr-[3px] w-full\">\n                    <Text\n                      className=\"text-base text-gray-700\"\n                      size=\"txtPoppinsSemiBold16\"\n                    >\n                      Timezone *\n                    </Text>\n                  </div>\n                  <div className=\"flex flex-col font-roboto items-center justify-start w-full\">\n                    <SelectBox\n                      className=\"bg-white-A700 outline outline-[1px] outline-gray-400 pl-3.5 pr-0.5 py-0.5 rounded-[10px] text-base text-gray-600 text-left w-full\"\n                      placeholderClassName=\"text-gray-600\"\n                      indicator={\n                        <Img\n                          className=\"h-11 mr-[0] w-7\"\n                          src=\"images/img_div.svg\"\n                          alt=\"div\"\n                        />\n                      }\n                      isMulti={false}\n                      name=\"div\"\n                      options={divOptionsList}\n                      isSearchable={true}\n                      placeholder=\"Select...\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col gap-1 items-start justify-start w-[558px] sm:w-full\">\n                  <div className=\"flex flex-col items-start justify-start pb-[3px] pr-[3px] w-full\">\n                    <Text\n                      className=\"text-base text-gray-700\"\n                      size=\"txtPoppinsSemiBold16\"\n                    >\n                      Website\n                    </Text>\n                  </div>\n                  <Input\n                    name=\"input_Four\"\n                    placeholder=\"\"\n                    className=\"p-0 placeholder:bg-white-A700 w-full h-[48px]\"\n                    wrapClassName=\"outline outline-[1px] outline-gray-400 rounded-[10px] w-full\"\n                    onChange={(e) => {\n                      form.handleChange(\"website\", e);\n                    }}\n                    value={form?.values?.website}\n                    shape=\"round\"\n                    color=\"white_A700\"\n                    variant=\"fill\"\n                  ></Input>\n                </div>\n                <Button\n                  className=\"common-pointer cursor-pointer font-bold leading-[normal] min-w-[558px] sm:min-w-full rounded-[32px] text-center text-xl\"\n                  onClick={() => {\n                    form.handleSubmit(createanaccount);\n                  }}\n                  size=\"lg\"\n                  variant=\"gradient\"\n                  color=\"blue_A400_indigo_900_01\"\n                >\n                  Create an account\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default SignUpPage;\n","import Axios from \"axios\";\n\nconst defaultAxios = Axios.create({\n  headers: {},\n});\ndefaultAxios.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (err) => {\n    return Promise.reject(err);\n  },\n);\n\nexport function apiClient(method, url, options = {}) {\n  const { data = {}, headers = {}, params = {}, ...rest } = options;\n  return defaultAxios({\n    url,\n    data,\n    method,\n    params,\n    headers,\n    ...rest,\n  });\n}\n\nexport const apis = {\n  get: (url, args) => apiClient(\"get\", url, args),\n  post: (url, args) => apiClient(\"post\", url, args),\n  put: (url, args) => apiClient(\"put\", url, args),\n  patch: (url, args) => apiClient(\"patch\", url, args),\n  delete: (url, args) => apiClient(\"delete\", url, args),\n};\n","import { apis } from \"service\";\n\nconst COMMON_URL = `http://223.177.160.54/api/v1/`;\n\nconst API_URLS = {\n  GET_VENUE_TYPE: `${COMMON_URL}venueType`,\n  POST_SIGNUP_USER: `${COMMON_URL}signupUser`,\n  POST_LOGIN_USER: `${COMMON_URL}loginUser`,\n};\n\nexport const getVenueType = (payload) =>\n  apis.get(API_URLS.GET_VENUE_TYPE, payload);\n\nexport const postSignupUser = (payload) =>\n  apis.post(API_URLS.POST_SIGNUP_USER, {\n    ...payload,\n    headers: { \"Content-type\": \"application/json\", ...payload?.headers },\n  });\n\nexport const postLoginUser = (payload) =>\n  apis.post(API_URLS.POST_LOGIN_USER, {\n    ...payload,\n    headers: { \"Content-type\": \"application/json\", ...payload?.headers },\n  });\n"],"names":["reducer","state","_ref","type","payload","inputKey","key","inputValue","value","values","cloneDeep","touched","set","errors","isSubmitted","submitCounter","defaultConfig","validate","validationOnChange","validateSchema","config","arguments","length","undefined","initalState","initialValues","getInitialState","dispatch","useReducer","getValidationErrors","useCallback","Promise","resolve","_","isValid","validateSync","abortEarly","err","inner","forEach","yupErr","currentErr","get","path","message","validateForm","async","React","checkForm","handleChange","resetForm","clearForm","oldValues","Object","keys","handleSubmit","onSubmit","setValues","divOptionsList","label","SignUpPage","_form$errors","_form$values","_form$errors2","_form$values2","_form$errors3","_form$values3","_form$errors4","_form$values4","_form$errors5","_form$values5","_form$values6","navigate","useNavigate","signupUser","setSignupUser","venueTypeList","setVenueTypeList","useState","selectedVenueType","setSelectedVenueType","venueType","setVenueType","formValidationSchema","yup","shape","firstName","required","lastName","email","matches","password","venue_name","form","useForm","address","venue_type","website","createanaccount","data","req","role_id","phone","postSignupUser","then","res","toast","success","setTimeout","catch","console","error","useEffect","getVenueType","options","log","name","id","map","item","select","_jsxs","_Fragment","children","_jsx","className","style","backgroundImage","Text","size","Input","placeholder","wrapClassName","onChange","e","color","variant","SelectBox","placeholderClassName","indicator","Img","src","alt","isMulti","isSearchable","selectedOption","Button","onClick","ToastContainer","defaultAxios","Axios","headers","apiClient","method","url","params","rest","interceptors","response","use","reject","apis","args","post","COMMON_URL","API_URLS","GET_VENUE_TYPE","concat","POST_SIGNUP_USER","POST_LOGIN_USER","postLoginUser"],"sourceRoot":""}